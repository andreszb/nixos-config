#!/usr/bin/env bash
set -eu

# Function to print error messages and exit
error() {
  echo -e "\e[1;31m$1\e[0m" >&2
  exit 1
}

# Function to print success messages
success() {
  echo -e "\e[1;32m$1\e[0m"
}

exe() {
  local message=$1
  shift
  "$@" && success "Success: $message" || error "Failed to $message."
}

# Check if running in the NixOS installer environment
exe "check NixOS installer environment" [ -e /etc/NIXOS ]

# Check for root privileges
exe "check root privileges" [ "$(id -u)" -eq 0 ]

# Download the disk-config.nix file from the repository
exe "download disk-config.nix" curl -o ./disk-config.nix https://raw.githubusercontent.com/andreszb/nixos-config/main/hosts/nixos/disk-config.nix

# Run disko to format and mount the disk
exe "run disko" sudo nix run --extra-experimental-features nix-command --extra-experimental-features flakes github:nix-community/disko -- --mode zap_create_mount ./disk-config.nix

USER_HOME="home/andreszb"
exe "create user home directory" sudo mkdir -p "/mnt/$USER_HOME"
exe "clone the repository" git clone https://github.com/andreszb/nixos-config.git "/mnt/$USER_HOME/nixos-config"
exe "link configuration files" sudo mkdir -p /mnt/etc && sudo ln -sfn "/mnt/$USER_HOME/nixos-config" /mnt/etc/nixos
exe "change directory to /mnt/etc/nixos" cd /mnt/etc/nixos

# Install NixOS
ARCH=$(uname -m)

case "$ARCH" in
  x86_64)
    FLAKE_TARGET="x86_64-linux"
    ;;
  *)
    error "Unsupported architecture: $ARCH"
    ;;
esac

sudo nixos-generate-config --no-filesystems --root /mnt --show-hardware-config > ./hardware-configuration.nix
exe "git add hardware config" git add ./hardware-configuration.nix
exe "install NixOS" sudo nixos-install --flake .#$FLAKE_TARGET "$@"
exe "set permissions for /mnt/etc/nixos" sudo chmod -R 775 /mnt/etc/nixos

# Prompt for reboot
# exe "link configuration files to /etc/nixos" sudo ln -sfn /home/andreszb/nixos-config /etc/nixos
read -p "Do you want to reboot now? (y/yes) " choice
case "$choice" in
  y|Y|yes|YES )
    success "Rebooting..."
    sudo reboot
    ;;
  * )
    echo -e "\e[1;33mReboot skipped.\e[0m"
    ;;
esac
